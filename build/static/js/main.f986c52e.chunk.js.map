{"version":3,"sources":["Component/Form.js","Component/Todo.js","Component/ToDoList.js","App.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","type","className","onChange","e","console","log","target","value","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","i","filter","ToDoList","filterTodos","key","App","useState","status","setFilterTodos","useEffect","getTodos","filterHandler","saveTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f986c52e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Form = ({ setInputText, todos, setTodos, inputText, setStatus }) => {\r\n    const inputTextHandler = (e) => {\r\n        console.log(e.target.value);\r\n        setInputText(e.target.value);\r\n    }\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        setTodos([...todos, { text: inputText, completed: false, id: Math.random() }]);\r\n        setInputText('');\r\n  }\r\n  const statusHandler = (e) => {\r\n    setStatus(e.target.value);\r\n  }\r\n    return (\r\n    <form>\r\n        <input type=\"text\" className=\"todo-input\" onChange={inputTextHandler} value={inputText} />\r\n        <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n        <div className=\"select\">\r\n          <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n            <option value=\"all\">All</option>\r\n            <option value=\"completed\">Completed</option>\r\n            <option value=\"uncompleted\">Uncompleted</option>\r\n          </select>\r\n        </div>\r\n    </form>\r\n    )\r\n}\r\nexport default Form;","import React from 'react';\r\n\r\nconst Todo = ({ text, todos, todo, setTodos }) => {\r\n    const deleteHandler = () => {\r\n         setTodos(todos.filter((e) => e.id !== todo.id));\r\n    \r\n    }\r\n    const completeHandler = () => {\r\n        setTodos(todos.map((i) => {\r\n            if (i.id === todo.id) {\r\n                return {\r\n                    ...i, completed: !i.completed\r\n                };\r\n            }\r\n            return i;\r\n        }));\r\n    }\r\n\r\n    return (\r\n     <div className=\"todo\">\r\n        <li className={` ${todo.completed? \"completed\" : ''}`}>{text} </li>\r\n        <button className=\"complete-btn\" onClick={completeHandler}>\r\n            <i className=\"fas fa-check\"></i>\r\n        </button>\r\n        <button onClick={deleteHandler} className=\"trash-btn\">\r\n            <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n     </div>\r\n    );\r\n};\r\n\r\nexport default Todo;\r\n","import React from 'react';\r\nimport Todo from './Todo';\r\n\r\nconst ToDoList = ({todos, setTodos, filterTodos}) => {\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\" key={Math.random()}>\r\n                {filterTodos.map((todo) => (\r\n                    <Todo todos={todos} setTodos={setTodos} text={todo.text}\r\n                        id={todo.id} todo={todo}  />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToDoList;","import React, { useState, useEffect } from 'react';\n\nimport './App.css';\nimport Form from './Component/Form';\nimport ToDoList from './Component/ToDoList';\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filterTodos, setFilterTodos] = useState([]);\n  \n  useEffect(() => {\n    getTodos();\n  },[])\n  useEffect(() => {\n    filterHandler();\n    saveTodos();\n  }, [todos, status])\n  \n\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilterTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case 'uncompleted':\n        setFilterTodos(todos.filter(todo => todo.completed === false));\n        break;\n      default:\n        setFilterTodos(todos);\n    }\n  }\n\n  const saveTodos = () => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }\n  const getTodos = () => {\n    if (localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]));\n    }\n    else {\n      let todoLocal = JSON.parse(localStorage.getItem('todos'));\n      setTodos(todoLocal);\n    }\n  }\n  return (\n    <div className=\"App\">\n      <header>\n        <h2>Nick's Todo List</h2>\n      </header>\n      <Form setInputText={setInputText} todos={todos} setTodos={setTodos}\n        inputText={inputText} setStatus={setStatus}  />\n      <ToDoList todos={todos} setTodos = {setTodos}  filterTodos={filterTodos}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}